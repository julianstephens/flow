version: '3.4'

services:
  server:
    container_name: budget_server
    hostname: server
    build:
      context: server
      target: ${APP_ENV}
      args:
        APP_HOME: ${APP_HOME}
    image: server:${APP_VERSION}
    ports:
      - ${SERVER_PORT_FORWARD}:${SERVER_PORT}
      - ${SERVER_DEBUG_PORT_FORWARD}:${SERVER_DEBUG_PORT}
      - ${PRISMA_PORT_FORWARD}:${PRISMA_PORT}
    links:
      - db
      - redis
    volumes:
      - .:${APP_HOME}
    restart: on-failure 
    command: yarn start

  client:
    container_name: budget_client
    hostname: client
    build:
      context: client
      target: ${APP_ENV}
      args:
        APP_HOME: ${APP_HOME}
    image: client:${APP_VERSION}
    ports:
      - ${CLIENT_PORT_FORWARD}:${CLIENT_PORT}
    volumes:
      - .:${APP_HOME}
    restart: on-failure 
    command: yarn start

  db:
    image: postgres:14-alpine
    container_name: budget_db
    hostname: postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - budget_pgdata:/var/lib/postgresql/data
    ports: 
      - ${DB_PORT_FORWARD}:${DB_PORT}
    restart: always

  redis: 
    image: redis/redis-stack:latest
    container_name: budget_redis
    hostname: redis
    ports: 
      # - ${REDIS_PORT_FORWARD}:${REDIS_PORT}
      - ${REDIS_INSIGHT_PORT_FORWARD}:${REDIS_INSIGHT_PORT}
    volumes:
      - budget_redis:/data
    restart: always

volumes:
  budget_pgdata:
    external: true
  budget_redis:
    external: true
