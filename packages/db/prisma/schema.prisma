// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/prisma-client"
}

generator zod {
  provider     = "zod-prisma"
  output       = "../src/generated"
  modelSuffix  = "Schema"
  useDecimalJs = true
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  fname     String?
  lname     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Item      Item[]

  @@map("users")
}

model Item {
  id                 Int       @id @default(autoincrement())
  plaidAccessToken   String    @map("plaid_access_token")
  plaidItemId        String    @map("plaid_item_id")
  plaidInstitutionId String    @map("plaid_institution_id")
  status             String
  userId             Int
  user               User      @relation(fields: [userId], references: [id])
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  Account            Account[]

  @@map("items")
}

model Account {
  id                     Int           @id @default(autoincrement())
  plaidAccountId         String        @unique @map("plaid_account_id")
  name                   String
  mask                   String
  officialName           String?       @map("official_name")
  currentBalance         Decimal?      @map("current_balance") @db.Decimal(28, 10)
  availableBalance       Decimal?      @map("available_balance") @db.Decimal(28, 10)
  isoCurrencyCode        String?       @map("iso_currency_code")
  unofficialCurrencyCode String?       @map("unofficial_currency_code")
  type                   String
  subtype                String
  itemId                 Int
  item                   Item          @relation(fields: [itemId], references: [id])
  createdAt              DateTime      @default(now())
  updatedAt              DateTime      @updatedAt
  Transaction            Transaction[]

  @@map("accounts")
}

model Transaction {
  id                     Int      @id @default(autoincrement())
  plaidTransactionId     String   @unique @map("plaid_transaction_id")
  plaidCategoryId        String   @map("plaid_category_id")
  category               String?
  subcategory            String?
  type                   String
  name                   String
  amount                 Decimal  @db.Decimal(28, 10)
  isoCurrencyCode        String?  @map("iso_currency_code")
  unofficialCurrencyCode String?  @map("unofficial_currency_code")
  date                   DateTime
  pending                Boolean
  accountOwner           String   @map("account_owner")
  accountId              Int
  account                Account  @relation(fields: [accountId], references: [id])
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt

  @@map("transactions")
}

model LinkEvent {
  id            Int      @id @default(autoincrement())
  itemId        Int
  userId        Int
  linkSessionId Int      @map("link_session_id")
  request_id    String   @unique
  errorType     String   @map("error_type")
  errorCode     String   @map("error_code")
  status        String
  createdAt     DateTime @default(now())

  @@map("link_events")
}

model PlaidAPIEvent {
  id          Int      @id @default(autoincrement())
  itemId      Int
  userId      Int
  plaidMethod String   @map("plaid_method")
  arguments   String
  request_id  String   @unique
  errorType   String   @map("error_type")
  errorCode   String   @map("error_code")
  createdAt   DateTime @default(now())

  @@map("plaid_api_events")
}
